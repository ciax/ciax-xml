### Structure of Data ###
  FIELD: {}
        id => data 
        ...

  STAT: {}
        "id" => ID
        "app_type" => application
        "frm_type" => frame
        "val" => {}
           id => val
        "type" =>{}
           id => val
        "class" =>{}
           id => val
        "msg" =>{}
           id => val
           ...

  WATCH: {}
        "cond" => []
	"block" => [appcmds]
	"exec" => [appcmds]
	"interrupt" => [frmcmds]


### Struct of Db ###
  FrmDb
    ::command
      :label
         id=>Label String
         ...
      :response
         ref=> Status ID
         ...
      :frame
         :main=>[ {data1},{data2} ..]
         :ccrange=>[ {data1},{data2} ..]
      :select
         id=>[ {data1},{data2} ..]
         ...
      :parameter
         id=>Range
         ...
      :nocache
         id=> true or false
         ...         
    ::response
      :label
         id=>Label String
         ...
      :frame
         :main=>[ {val1},{val2} ..]
         :ccrange=>[ {val1},{val2} ..]
      :select
         id=>[ {val1},{val2} ..]
         ...

  AppDb
    { "id" ,"frame", "label", "interval }
    :command
      :select
        id => [ statement,.. ]
           statement=["cmd",{arg1},{arg2}..]
        ...
      :label => {}
        id => Label String
    :status
      "talbe"=> Symbol Table
      :select
        id => [ { :type, "ref" .. },... ]
        ...
      :label => {}
        id => Label String
      :group => []
        [ Title, [ id1, id2,.. ] ]
        ...
      :symbol => {}
        id => Symbol Table ID
        ..
    :watch => []
        {:type, :var=>{variable},.. }
          :period => second
          :condition => {:operator, :ary => [ {:ref,:val},.. ] }
          :command => [ [statement],.. ]
          :blocking => regexp
          :interrupt => [ [statement],..]

  SymDb
     id => { label, type(pattern|range), class(normal|warn..), msg}
        ...
