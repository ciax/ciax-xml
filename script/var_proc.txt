#### PROC VARS
## Related to Update

  Upd@upd_procs
    structure: Array[Proc,..]
    args: Hashx(self)
    called: Upd#upd

  Upd@cmt_procs
    structure: Array[Proc,..]
    args: Hashx(self)
    called: Upd#cmt

## Related to Command

  @cfg[:def_proc]
    structure: Proc
    args:
      Entity, String(source), Integer(priority)
    called:
      Entity#execmd
    set_methods:
      (Command,Domain,Group)#proc(&) 
      (Command,Domain,Group)#rem.int.proc(id,&) 
      (App/Frm/Mcr)::Command#rem.ext.proc(&) 

## Related to Event(DataH)

  @def_proc
    structure: Proc
    args:
      Entity, String(source), Integer(priority)
    called:
      Wat::Rsp(Event)#exec

  @post_exe_procs
    structure: Array[Proc,..]
    args:(on each element)
      Entity, String(source), Integer(priority)
    called:
      Wat::Rsp(Event)#exec

## Related to Exe

  @pre_exe_procs
    structure: Array[Proc,..]
    args: Array(command)
    called: Exe#exe

  @post_exe_procs
    structure: Array[Proc,..]
    args: Exe(self)
    called: Exe#exe

  @server_input_proc
    structure: Proc
    args: String(command line)
    called: Server(Exe)#ext_server
    
  @server_output_proc
    structure: Proc
    args: no
    called: Server(Exe)#ext_server

  @shell_input_proc
    structure: Proc
    args: Array(command)
    calld: Shell#shell

  @shell_output_proc
    args: no
    structure: Proc
    called: Shell#shell

  Shell@prompt_proc
    structure: Proc
    args: no
    called: Shell#prompt

## Related to Frm

  Field@flush_procs
    structure: Array[Proc,..]
    args:(on each element)
      Frm::Exe(self)
    called: Frm::Sv#initialize

  Rsp(Field)@input_proc
    structure: Proc
    args: no
    called: Rsp:ext_rsp

## Related to Buffer

  @send_proc  
    structure: Proc
    args: Entity
    called: send
    set_methods: send_proc

  @recv_proc  
    structure: Proc
    args: Array(args),String(src)
    called: server
    set_methods: recv_proc

## Related to Mcr::Sequencer(Exe)

  @post_stat_procs
    structure: Array[Proc,..]
    args:(on each element)
      Sequencer(self)
    called: set_stat

  @post_mcr_procs
    structure: Array[Proc,..]
    args:(on each element)
      Sequencer(self)
    called: finish

  @cfg[:submcr_proc]
    structure: Proc
    args: Array(args),String(id)
    called: macro
    set_at: Mcr::Man::Sv#initialize()
