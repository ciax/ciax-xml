#!/bin/bash
# Use sql file generated by log2sql
nexttime(){
    sqlite3 $sqlfile <<EOF | grep .
select min(time) from stream
 where time > ${time:=0}
 ${site:+ and id == '$site'}
 ${input:+and snd == '$input'}
;
EOF
}
next(){
    time=$(nexttime) && return
    warn "== Rewinded =="
    time=$(nexttime) || return 1
}
fields(){
    sqlite3 -line $sqlfile <<EOF | tr -d ' '
select * from stream
 where time == $time; 
EOF
}
setvar(){
    while read line; do
        eval "$line"
    done < <(fields)
}

warn(){
    echo "DEVSIM:$*" > /dev/stderr
}

kilpid(){
    pid=$(grep -s . $pidfile) && { kill $pid; :> $pidfile; }
}
server(){
    kilpid
    # To keep alive an exec command, it should be first item
    socat exec:"$0 -" udp-recvfrom:8888,reuseaddr,fork &
    echo $! > $pidfile
    exit
}

pidfile="$HOME/.var/run/devsim.pid"
[ "$1" ] ||{  echo "Usage:${0##*/} (-d) [site]";kilpid;exit 1; }
[ "$1" = -d ] && server
[ "$1" = - ] || site=$1
time=0
sqlfile="$HOME/.var/log/stream.sq3"
warn "== Init =="
while : ; do
    warn "  Ready"
    input=$(input64)
    warn "  Search for $input"
    ns=$(date +%s.%N)
    next || { warn "== No find =="; continue; }
    setvar
    rest=$(echo "$dur+$ns-$n$(date +%s.%N)"|bc)
    warn "  Find $time"
    sleep $rest
    warn "  Slept $rest"
    echo -n $rcv|base64 -d
done

